1. 编译环境 Visual studio 2017 
网址  https://visualstudio.microsoft.com/zh-hans/downloads/
选 社区版，下载好后，安装。

2. Opencv版本： 4.0.0 
网址 https://opencv.org/releases.html
选 4.0.0 的Win pack
下载好后，解压出来。

3. 下载安装cmake。
网址 https://cmake.org/download/
选windows的zip版本，解压出来就好了。

4. 建好一个build_opencv目录。
5. 运行 cmake-3.14.0-win64-x64\bin\cmake-gui.exe。
6. cmake界面上，源文件目录选 opencv-4.0.0/sources/， 二进制目录（编译目录）选 第四步那个 build_opencv 目录。
7. cmake界面， 点击 configure，会弹出选编译环境， 选 vc15 即 visual studio 2017。 机器是x64（根据自己电脑来定）。
8. 第一次configure完成后，再点第二次configure。
9. 两次configure都正常完成，没有错误。 就点generate，去生成工程配置文件。
10. 顺利生成完毕。双击 build_opencv/OpenCV.sln， 打开此工程，进入到visual studio 2017的界面。
11. 然后在visual studio 2017菜单，选“生成”->“生成解决方案”。至此，顺利的话，就编译完opencv了。
12. 编译生成的有用文件在 build_opencv\bin\Debug目录， 主要是 opencv_*.dll 
    要把这些dll文件复制到 c:\windows\system32目录，以便后面我们自己写的一些执行文件，需要调用这里面的函数。
    还有 build_opencv\3rdparty\ffmpeg 有两个dll，也一并复制过去。
   
13. 编译samples， 建立一个build_opencv_samples目录。
14. cmake 重新选源文件目录 opencv-4.0.0/sources/samples，二进制文件目录 build_opencv_samples。
15. 点击configure，会出错，打开cmake中间那里 name--value ，找到 OPENCV_DIR 和 OPENCV_CONFIG_PATH，将这两项的值，设置为 build_opencv 目录。
16. 设置好 OPENCV_DIR 和 OPENCV_CONFIG_PATH 后， 再次点击 configure。应该会成功。
17. 此时，再点generate。 就会在 build_opencv_samples 生成工程配置文件了。
18. 双击 build_opencv_samples/samples.sln， 在visual studio 2017中，就打开了samples的工程，然后“生成”->“生成解决方案”。
19. 等所有的编译完成， build_opencv4_samples\cpp\Debug 目录下，就是一些 cpp的例子了。其他目录的 Debug下，也有它们对应的 exe。
20. 此时，所有编译完成。 可以去运行例子和学习samples了。
